/*

Copyright Jesus Perez <jesusprubio gmail com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

'use strict';

// Exploit API
// https://developer.shodan.io/api/exploits/rest

var lodash = require('lodash'),

  utils  = require('./utils'),

  URL_STRING = 'exploits';


// Public methods

module.exports.search = function (config, callback) {
  var partialQuery = '/api/search?',
    optionals = ['facets', 'page'],
    options;

  if (config.query) {
    partialQuery += 'query=' + config.query + '&';
    // Adding optionas params and dropping not valid params
    lodash.map(config.opts, function (value, key) {
      if (optionals.indexOf(key) !== -1) {
        partialQuery += key + '=' + value + '&';
      }
    });

    options = {
      method: 'GET',
      partialQuery: partialQuery,
      key: config.key,
      timeout: config.timeout
    };
    utils.apiRequest(URL_STRING, options, callback);
  } else {
    callback({
      msg: 'The "query" parameter is mandatory'
    });
  }
};


module.exports.count = function (config, callback) {
  var partialQuery = '/api/count?',
      options;

  if (config.query) {
    partialQuery += 'query=' + config.query + '&';
    if (config.opts && config.opts.facets) {
      partialQuery += 'facets=' + config.facets + '&';
    }

    options = {
      method: 'GET',
      partialQuery: partialQuery,
      key: config.key,
      timeout: config.timeout
    };
    utils.apiRequest(URL_STRING, options, callback);
  } else {
    callback({
      msg: 'The "query" parameter is mandatory'
    });
  }
};
